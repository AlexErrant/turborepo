# Turborepo Release Pipeline
#
# This release consists of a few steps
#
# 1. Create a staging branch
# 2. Run some smoke tests on that branch
# 3. Build the Rust binary
# 4. Publish JS packages npm (including turbo itself)
# 5. Create a release branch and open a PR.

# You can opt into a dry run, which will skip publishing to npm and opening the release branch

name: Turborepo Release

env:
  CARGO_PROFILE_RELEASE_LTO: true
  # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      increment:
        description: "SemVer Increment (prerelease = bump canary)"
        required: true
        default: "prerelease"
        type: choice
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major
      dry_run:
        description: "Do a dry run, skipping the final publish step."
        type: boolean

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - name: Configure git
        run: |
          git config --global user.name 'Turbobot'
          git config --global user.email 'turbobot@vercel.com'
      - name: Version
        run: |
          ./scripts/version.js ${{ inputs.increment }}
          echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
    outputs:
      version: "${{ steps.bump-version.outputs.VERSION }}"

  rust-smoke-test:
    name: Rust Unit Tests
    runs-on: ubuntu-latest
    needs: [bump-version]
    steps:
      - name: Setup Turborepo Environment
        uses: ./.github/actions/setup-turborepo-environment
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run Rust Unit Tests
        run: cargo groups test turborepo

  js-smoke-test:
    name: JS Package Tests
    runs-on: ubuntu-latest
    needs: [bump-version]
    steps:
      - name: Setup Turborepo Environment
        uses: ./.github/actions/setup-turborepo-environment
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          node-version: "20"
      - name: Install Global Turbo
        uses: ./.github/actions/install-global-turbo
      - name: Run JS Package Tests
        run: turbo run check-types test --filter="./packages/*" --color
  make-release-pr:
    needs: [bump-version, rust-smoke-test, js-smoke-test]
    permissions:
      id-token: write # Enable OIDC
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chainguard-dev/actions/setup-gitsign@main
      - name: Install cargo-release
        uses: taiki-e/install-action@v1
        with:
          tool: cargo-release

      - uses: cargo-bins/release-pr@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ needs.bump-version.outputs.version }}
          crate-name: turbo
